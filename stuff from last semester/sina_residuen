setwd("C:/Users/User/Documents/Studium_MA/3. Semester/Statistical Consulting/R")
seal_clean <- read.csv("seal_data_cleaned.csv")

obs <- cbind(seal_clean$sealID, seal_clean$surf.dur, seal_clean$dive.dur,
             seal_clean$max.dep, seal_clean$steplen)
colnames(obs) <- c("sealID","surf.dur", "dive.dur", "max.dep", "steplen")
#split dataset for harbour and grey seals (1=grey seal)
obs_1 <- obs[which(obs[,1]<=11),]
obs_0 <- obs[which(obs[,1]>=12),]


res2sl <- list()
res2sl$mu1<- c(38.63129, 111.38412)
res2sl$mu2<- c(156.91947, 71.18653)
res2sl$mu3<- c(22.29625, 6.10472)
res2sl$mu4<- c(120.10310, 26.85120)
res2sl$sigma1<- c(11.83331, 144.80094)
res2sl$sigma2<- c(57.62893, 62.17002)
res2sl$sigma3<- c(13.64301, 4.78521)
res2sl$sigma4<- c(82.68534, 30.19057)
res2sl$gamma <- matrix(c(0.931261, 0.068739, 0.121455, 0.878546),2,byrow=T)
res2sl$delta <- c(0.6385836, 0.3614164)

res3sl <- list()
res3sl$mu1<- c(141.40020, 46.54668, 36.31873)
res3sl$mu2<- c(39.63630, 148.27180, 156.74800)
res3sl$mu3<- c(4.04023, 17.42329, 22.92530)
res3sl$mu4<- c(19.53895, 52.51476, 157.32574)
res3sl$sigma1<- c(201.91241, 25.40830, 8.86741)
res3sl$sigma2<- c(27.81127, 82.01774, 43.82091)
res3sl$sigma3<- c(2.54377, 12.74487, 13.89699)
res3sl$sigma4<- c(21.75779, 43.74214, 66.28669)
res3sl$gamma <- matrix(c(0.824601, 0.129573, 0.045826, 0.089276, 0.845705,
                         0.065019, 0.022303, 0.064740, 0.912958),nrow=3,byrow=T)
res3sl$delta <- c(0.2366674, 0.3656206, 0.3977120)

res4sl <- list()
res4sl$mu1<- c(31.88682,  43.06180,  52.36523, 172.35877)
res4sl$mu2<- c(141.15560, 170.96454, 124.07681,  30.61768)
res4sl$mu3<- c(13.453759, 32.833299, 10.621648,  3.267052)
res4sl$mu4<- c(153.40901, 114.75732,  44.92601,  13.27642)
res4sl$sigma1<- c(6.640114,  10.799599,  39.948326, 257.437716)
res4sl$sigma2<- c(38.30029, 58.10965, 85.06068, 19.16952)
res4sl$sigma3<- c(6.580927, 11.820816,  7.563079,  1.796753)
res4sl$sigma4<- c(65.40738, 79.61849, 41.91209, 14.24946)
res4sl$gamma <- matrix(c(0.884416338, 0.008210614, 0.10084565, 0.006527402,
                         0.006025303, 0.937861930, 0.04595484, 0.010157922,
                         0.080060102, 0.040454540, 0.77944006, 0.100045301,
                         0.018009185, 0.022190366, 0.16236337, 0.797437079),4,byrow=T)
res4sl$delta <- c(0.2471444, 0.2865394, 0.2971978, 0.1691183)

hres2sl <- list()
hres2sl$mu1<- c(40.81682, 113.60000)
hres2sl$mu2<- c(162.9102, 105.0562)
hres2sl$mu3<- c(21.836744,  4.603524)
hres2sl$mu4<- c(48.74350, 21.43112)
hres2sl$sigma1<- c(12.53681, 156.83692)
hres2sl$sigma2<- c(62.6588, 101.1413)
hres2sl$sigma3<- c(10.11698,  3.13330)
hres2sl$sigma4<- c(56.09231, 30.72411)
hres2sl$gamma <- matrix(c(0.96609502, 0.03390498, 0.06668338, 0.93331662),nrow=2,byrow=T)
hres2sl$delta <- c(0.6629333, 0.3370667)

hres3sl <- list()
hres3sl$mu1<- c(43.17531,  38.56498, 133.67557)
hres3sl$mu2<- c(155.98686, 166.67972,  91.54371)
hres3sl$mu3<- c(30.452695, 13.377403,  4.162385)
hres3sl$mu4<- c(45.79058, 50.33951, 14.99569)
hres3sl$sigma1<- c(12.50534,  12.72083, 194.91207)
hres3sl$sigma2<- c(43.73357, 80.95269, 91.70760)
hres3sl$sigma3<- c(4.794423, 6.432709, 2.920787)
hres3sl$sigma4<- c(49.66673, 60.30456, 21.24480)
hres3sl$gamma <- matrix(c(0.96173300, 0.01427472, 0.02399228, 0.01049263, 0.94707429,
                          0.04243308, 0.02583921, 0.06992465, 0.90423614),nrow=3,byrow=T)
hres3sl$delta <- c(0.2992625, 0.4336228, 0.2671147)

hres4sl <- list()
hres4sl$mu1<- c(38.24525,  37.90367, 402.57188,  42.40279)
hres4sl$mu2<- c(165.61557,  92.11664, 150.37865, 156.21455)
hres4sl$mu3<- c(14.262110,  3.215758, 11.306048, 30.649192)
hres4sl$mu4<- c(49.23663, 20.37289, 26.62026, 46.26177)
hres4sl$sigma1<- c(11.69191,  29.32017, 623.58415,  10.96548)
hres4sl$sigma2<- c(75.94096,  81.42040, 176.53191,  43.55601)
hres4sl$sigma3<- c(5.612117,  1.347204, 10.025119,  4.631337)
hres4sl$sigma4<- c(59.91370, 29.02331, 39.35957, 49.84760)


##########################

lforward <- function(obs,mod,N){
  T <- dim(obs)[1]
  lalpha <- matrix(NA,T,N)
  allprobs <- matrix(1,nrow=T,ncol=N)
  for (j in 1:N){
    surf.prob <- dgamma(obs[,2],shape=mod$mu1[j]^2/mod$sigma1[j]^2,scale=mod$sigma1[j]^2/mod$mu1[j])
    dive.prob <- dgamma(obs[,3],shape=mod$mu2[j]^2/mod$sigma2[j]^2,scale=mod$sigma2[j]^2/mod$mu2[j])
    dep.prob <- dgamma(obs[,4],shape=mod$mu3[j]^2/mod$sigma3[j]^2,scale=mod$sigma3[j]^2/mod$mu3[j])
    step.prob <- dgamma(obs[,5],shape=mod$mu4[j]^2/mod$sigma4[j]^2,scale=mod$sigma4[j]^2/mod$mu4[j])
    allprobs[,j] <- surf.prob*dive.prob*dep.prob*step.prob
  }
  u <- mod$delta*allprobs[1,]
  l <- log(sum(u))
  phi <- u/sum(u)   
  lalpha[1,] <- l+log(phi)
  for(t in 2:T) {
    u <- phi%*%mod$gamma*allprobs[t,]
    l <- l+log(sum(u))
    phi <- u/sum(u)
    lalpha[t,] <- l+log(phi)
  }
  return(lalpha)
}

psres <- function(obs,mos,N){
  T <- dim(obs)[1]
  surf.res <- rep(NA,T)
  dive.res <- rep(NA,T)
  max.res <- rep(NA,T)
  step.res <- rep(NA,T)
  psurf <- matrix(NA,T,N)
  pdive <- matrix(NA,T,N)
  pmax <- matrix(NA,T,N)
  pstep <- matrix(NA,T,N)
  la <- lforward(obs,mod,N)
  for(i in 1:N) {
    for(t in 1:T) {
      psurf[t,i] <- pgamma(obs[t,2],shape=mod$mu1[i]^2/mod$sigma1[i]^2,scale=mod$sigma1[i]^2/mod$mu1[i])
      pdive[t,i] <- pgamma(obs[t,3],shape=mod$mu2[i]^2/mod$sigma2[i]^2,scale=mod$sigma2[i]^2/mod$mu2[i])
      pmax[t,i] <- pgamma(obs[t,4],shape=mod$mu3[i]^2/mod$sigma3[i]^2,scale=mod$sigma3[i]^2/mod$mu3[i])
      pstep[t,i] <- pgamma(obs[t,5],shape=mod$mu4[i]^2/mod$sigma4[i]^2,scale=mod$sigma4[i]^2/mod$mu4[i])
    }
  }
  surf.res[1] <- qnorm(mod$delta%*%psurf[1,]) 
  dive.res[1] <- qnorm(mod$delta%*%pdive[1,])
  max.res[1] <- qnorm(mod$delta%*%pmax[1,])
  step.res[1] <- qnorm(mod$delta%*%pstep[1,])
  for(t in 2:T) {
    lat <- la[t-1,]  
    c <- max(lat) 
    elat <- exp(lat-c)
    surf.res[t] <- qnorm(t(elat)%*%(mod$gamma/sum(elat))%*%psurf[t,])
    dive.res[t] <- qnorm(t(elat)%*%(mod$gamma/sum(elat))%*%pdive[t,])
    max.res[t] <- qnorm(t(elat)%*%(mod$gamma/sum(elat))%*%pmax[t,])
    step.res[t] <- qnorm(t(elat)%*%(mod$gamma/sum(elat))%*%pstep[t,])
  }
  return(list(surf.res=surf.res,dive.res=dive.res,max.res=max.res,step.res=step.res))
}


######################## 

## Funktionen Plots

resids_hist <- function(resids,var=4){
  par(mfrow=c(2,2))
  title <- c("Surface Duration","Dive Duration","Maximum Depth","Steplength")
  for(i in 1:var){
    hist(resids[[i]],prob=T,xlab=NULL,main=title[i],col="grey")
    xfit <- seq(min(na.omit(resids[[i]])),max(na.omit(resids[[i]])),length=100)
    yfit <- dnorm(xfit)
    lines(xfit, yfit, lwd=2, col=2)
  }
}

resids_qq <- function(resids,var=4){
  par(mfrow=c(2,2))
  title <- c("Surface Duration","Dive Duration","Maximum Depth","Steplength")
  for(i in 1:var){
    res <- sample(unique(resids[[i]]),size=50000)
    qqnorm(res,main=title[i])
    qqline(res,col=2,lwd=3)
  }
}

resids_acf <- function(resids,var=4){
  par(mfrow=c(2,2))
  title <- c("Surface Duration","Dive Duration","Maximum Depth","Steplength")
  for(i in 1:var){
    acf(na.omit(resids[[i]]),main=title[i])
  }
}

#######################


## 2 states, grey seals
N <- 2
obs <- obs_1
mod <- res2sl
resids2g <- psres(obs,mod,N)
for (i in 1:4) {
  print(summary(resids2g[[i]]))
}
# Histogramm
resids_hist(resids2g)
# qq-plot
resids_qq(resids2g)
# sample autocorrelation function
resids_acf(resids2g)


## 3 states, grey seals
N <- 3
mod <- res3sl
resids3g <- psres(obs,mod,N)
for (i in 1:4) {
  print(summary(resids3g[[i]]))
}
# Histogramm
resids_hist(resids3g)
# qq-plot
resids_qq(resids3g)
# ACF
resids_acf(resids3g)


## 4 states, grey seals
N <- 4
mod <- res4sl
resids4g <- psres(obs,mod,N)
for (i in 1:4) {
  print(summary(resids4g[[i]]))
}
# Histogramm
resids_hist(resids4g)
# qq-plot
resids_qq(resids4g)
# ACF
resids_acf(resids4g)


## 2 states, harbour seals
N <- 2
obs <- obs_0
mod <- hres2sl
resids2h <- psres(obs,mod,N)
for (i in 1:4) {
  print(summary(resids2h[[i]]))
}
# Histogramm
resids_hist(resids2h)
# qq-plot
resids_qq(resids2h)
# ACF
resids_acf(resids2h)


## 3 states, harbour seals
N <- 3
mod <- hres3sl
resids3h <- psres(obs,mod,N)
for (i in 1:4) {
  print(summary(resids3h[[i]]))
}
# Histogramm
resids_hist(resids3h)
# qq-plot
resids_qq(resids3h)
# ACF
resids_acf(resids3h)


## 4 states, harbour seals
N <- 4
mod <- hres4sl
resids4h <- psres(obs,mod,N)
for (i in 1:4) {
  print(summary(resids4h[[i]]))
}
# Histogramm
resids_hist(resids4h)
# qq-plot
resids_qq(resids4h)
# ACF
resids_acf(resids4h)


# Bilder (2x2) als Image speichern. Auflösung für Präsi: 1600 x 900 (16:9)
# Text: 1200 x 900 (4:3)
# für einzelne Bilder Werte halbieren!
